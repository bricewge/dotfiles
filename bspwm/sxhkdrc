# -*- mode: conf-space -*-
# Hotkeys for bspwm
# * bspwm hotkeys
# ** Not orded, yet

# Close or kill a window
super + {_, shift +} d
	bspc node --{close,kill}

# Toggle the state of the window
super + {_, shift +} f
	bspc node -t \~{floating,fullscreen}
super + {_, shift +} s
	bspc node -t \~{tiled,pseudo_tiled}

# Switch between the last node/monitor
super + {_, shift +} Tab
	bspc {node,monitor} -f last

# Swap the current node with the biggest node of the desktop
super + m
	bspc node focused --swap biggest.local

# Toogle windows gap
super + g
  bspc config window_gap $( [[ `bspc config window_gap` -eq $BSPWM_GAP ]] && echo 0 || echo $BSPWM_GAP )

# Rotate the tree clockwise and counter-clockwise
super + {_, shift +} r
 bspc node @/ -R {+,-}90

# ** monitor
# Cycle through monitors
super + {q,w}
    bspc monitor --focus {next,prev}

# Move to monitor
super + {shift,alt} + {q,w}
    bspc {node,desktop} --to-monitor {next,prev}
# TODO report crash when =bspc desktop --to-monitor-prev=

# ** vim movments
# Select windows and move them in the current desktop 
super + {_,shift + }{h,j,k,l}
	bspc node --{focus,swap} {west,south,north,east}

# Resize node from their sides, increase then decrease
super + alt + {h,j,k,l}
  bspc node --resize {left -20 0, bottom 0 20, top 0 -20, right 20 0}
super + alt + shift + {h,j,k,l}
  bspc node --resize {left 20 0, bottom 0 -20, top 0 20, right -20 0}

# Move between desktop and move node bettwen desktop
super + ctrl + {h,l}
	bspc desktop --focus {prev,next}
super + ctrl + shift + {h,l}
	dir={prev,next} && \
	bspc node --to-desktop ${dir} --follow
# ** resize
# Increase size from a side
super + z: {h,j,k,l}
  bspc node --resize {left -20 0, bottom 0 20, top 0 -20, right 20 0}
# Decrease size from a side
super + z: shift + {h,j,k,l}
  bspc node --resize {left 20 0, bottom 0 -20, top 0 20, right -20 0}

# ** Move between desktops
# Switch to desktop within a monitor
super + {1-9}
	bspc desktop --focus 'focused:^'{1-9}
# # Switch to desktop for Macbook Air French AZERTY keyboard
# super + {ampersand,eacute,quotedbl,apostrophe,parenleft,section,egrave,exclam,ccedilla}
# 	bspc desktop --focus ^{1-9}
# Switch betwen monitors
super + alt + {1-9}
  bspc monitor --focus '^'{1-9}

# Send the selected window to the desktop 1-6 and follow it, if no
# window is selected go to the desktop 1-6 anyway.
super + shift + {1-9}
	bspc node focused --to-desktop 'focused:^'{1-9} --follow
# Go to the next or previous desktop
super + {Left, comma, Right, period}
	bspc desktop -f {prev,prev,next,next}
# Move the selected window to the next or previous desktop
super + shift + {Left,Right}
	dir={prev,next} && \
	bspc node --to-desktop ${dir} --follow

# ** Mouse actions
~button1
	bspc node pointed -f

# * app launchers
# Stop the key chain if the mouse buttons are pressed
super + space ; {~button1, ~button2, ~button3}
  echo {1,2,3}

# Terminal
super + space ; {t, T}
	alacritty --command tmux {new-session -t main,_}

# Editor
# TODO Should open a clean emacs
super + space ; {e, E}
        {emacsclient -nc -a "", emacs}

# File browser
# TODO Add ranger.el
super + space ; f 
  nautilus

# Web browser
super + space ; {w, W}
  {firefox,chromium}

super + space ; v
  mpv --profile=pseudo-gui

super + space ; space
  rofi -show drun

# * Â¿ interface ?
super + p
	rofi-pass

super + w
  rofi-wifi

super + u
  UDISKIE_DMENU_LAUNCHER=rofi udiskie-dmenu -matching regex -dmenu -i -no-custom -multi-select

super + o
  org-capture

# super + 0
#   xdotool search --onlyvisible --name TermiteDropDown windowunmap \
#       || xdotool search --name TermiteDropdown windowmap \
#       || termite --name TermiteDropdown --geometry=`xdotool getdisplaygeometry | awk '{ print $1"x"$2/3 }'`

# super + =
#     id=$(bspc query -N -n "focused");\
#     if [ -n "$id" ];then \
#         xprop -id $id -f _SCRATCH 32ii -set _SCRATCH $(date +%s,%N);\
#         bspc node -t "floating";\
#         xdotool windowunmap $id;\
#     fi

# ** screenshot
super + space ; s
	maim ~/image/screenshot/$(date +%s).png && \
   notify-send -u low "new window screenshot"

super + space ; S
	maim --select ~/image/screenshot/$(date +%s).png && \
   notify-send -u low "new screenshot"

# ** TODO notifications
# * macOS shortcuts

# For selection, copy and paste. Thanks to:
# http://developers-club.com/posts/266375/

# copy
super + c
  copypaste.sh copy
# paste
super + v
  copypaste.sh paste
# cut
super + x
  xvkbd -xsendevent -text '\[Control_L]x'
# select all
super + a
  xvkbd -xsendevent -text '\[Control_L]a'

# * media keys
# ** monitor brightness
XF86MonBrightnessDown
	xbacklight -fps 10 -ctrl acpi_video0 -7

XF86MonBrightnessUp
	xbacklight -fps 10 -ctrl acpi_video0 +7

# ** TODO launchers
{super + F3, XF86LaunchA, super + bracketleft}
  dropdown.sh

{super + F4, XF86LaunchB, super + bracketright}
  riseup.sh

# ** keyboard brightness
XF86KbdBrightnessDown
	xbacklight -fps 10 -ctrl smc::kbd_backlight -7

XF86KbdBrightnessUp
	xbacklight -fps 10 -ctrl smc::kbd_backlight +7

# ** multimedia
{super + F7, XF86AudioPrev}
  playerctl previous || mpvctl previous || mpc prev

{super + F8, XF86AudioPlay}
  playerctl play-pause | mpvctl toggle || mpc toggle

{super + F9, XF86AudioNext}
  playerctl next || mpvctl next || mpc next

# ** audio volume
# WAITING fixed https://github.com/baskerville/sxhkd/issues/131
super + F10
  amixer -q set Master toggle

XF86AudioMute
  sink=$(pactl list sinks short | sed -n -e 's/^\([[:digit:]]\+\).*alsa_output.*analog-stereo.*/\1/p') && \
  pactl set-sink-mute "${sink}" toggle

{super + F11, XF86AudioLowerVolume}
  amixer -q set Master 5%- unmute

{super + F12, XF86AudioRaiseVolume}
  amixer -q set Master 5%+ unmute

XF86AudioMicMute
  source=$(pactl list sources short | sed -n -e 's/^\([[:digit:]]\+\).*alsa_input.*analog-stereo.*/\1/p') && \
  pactl set-source-mute "${source}" toggle

# ** system
XF86PowerOff
  rofi-power "loginctl terminate-user ${USER}" 

# * window manager
# Reload UI configurations
super + Escape
	 pkill -USR1 -x "(sxhkd|compton)" && \
   notify-send -u low "sxhkd reloaded"

# Quit bspwm and kill the panel
super + alt + Escape
   pkill conky; pkill polybar; bspc quit

# ~Escape
# 	~/.config/bspwm/panel/scripts/toggle_conky *

# * workarounds
# Disable Ctrl+q for Firefox
# ctrl + q
#   notify-send "ctrl+q pressed" ;\
#   xdo key_press -k 105 ; sleep 0.2 ;\
#   xdo key_press -k 24 ; sleep 0.2 ;\
#   xdo key_release -k 24 ; sleep 0.2 ;\
#   xdo key_release -k 105
